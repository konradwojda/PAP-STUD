-- Generated by Oracle SQL Developer Data Modeler 21.2.0.165.1515
--   at:        2021-11-21 21:41:37 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE agency (
    agency_id NUMBER NOT NULL,
    name      VARCHAR2(64 CHAR) NOT NULL,
    website   VARCHAR2(128 CHAR) NOT NULL,
    timezone  VARCHAR2(64 CHAR),
    telephone VARCHAR2(32 CHAR)
);

ALTER TABLE agency ADD CONSTRAINT agency_pk PRIMARY KEY ( agency_id );

CREATE TABLE calendar (
    calendar_id NUMBER NOT NULL,
    "start"     DATE NOT NULL,
    end         DATE,
    moday       CHAR(1),
    tuesday     CHAR(1),
    wednesday   CHAR(1),
    thursday    CHAR(1),
    friday      CHAR(1),
    saturday    CHAR(1),
    sunday      CHAR(1)
);

ALTER TABLE calendar ADD CONSTRAINT calendar_pk PRIMARY KEY ( calendar_id );

CREATE TABLE line (
    line_id          NUMBER NOT NULL,
    code             VARCHAR2(16 CHAR) NOT NULL,
    description      VARCHAR2(64 CHAR),
    type             NUMBER(2) NOT NULL,
    agency_agency_id NUMBER NOT NULL
);

ALTER TABLE line ADD CONSTRAINT line_pk PRIMARY KEY ( line_id );

CREATE TABLE pattern (
    pattern_id   NUMBER NOT NULL,
    headsign     VARCHAR2(64 CHAR),
    direction    NUMBER(1),
    line_line_id NUMBER NOT NULL
);

ALTER TABLE pattern ADD CONSTRAINT pattern_pk PRIMARY KEY ( pattern_id );

CREATE TABLE patternstop (
    stop_stop_id       NUMBER NOT NULL,
    pattern_pattern_id NUMBER NOT NULL,
    travel_time        NUMBER(6)
);

ALTER TABLE patternstop ADD CONSTRAINT patternstop_pk PRIMARY KEY ( stop_stop_id,
                                                                    pattern_pattern_id );

CREATE TABLE stop (
    name                  VARCHAR2(64 CHAR) NOT NULL,
    code                  VARCHAR2(16 CHAR),
    lat                   NUMBER NOT NULL,
    lon                   NUMBER NOT NULL,
    wheelchair_accessible CHAR(1),
    stop_id               NUMBER NOT NULL
);

ALTER TABLE stop ADD CONSTRAINT stop_pk PRIMARY KEY ( stop_id );

CREATE TABLE trip (
    wheelchair_accessible CHAR(1),
    departure             NUMBER(6) NOT NULL,
    trip_id               NUMBER NOT NULL,
    pattern_pattern_id    NUMBER NOT NULL,
    calendar_calendar_id  NUMBER NOT NULL
);

ALTER TABLE trip ADD CONSTRAINT trip_pk PRIMARY KEY ( trip_id );

ALTER TABLE line
    ADD CONSTRAINT line_agency_fk FOREIGN KEY ( agency_agency_id )
        REFERENCES agency ( agency_id );

ALTER TABLE pattern
    ADD CONSTRAINT pattern_line_fk FOREIGN KEY ( line_line_id )
        REFERENCES line ( line_id );

ALTER TABLE patternstop
    ADD CONSTRAINT patternstop_pattern_fk FOREIGN KEY ( pattern_pattern_id )
        REFERENCES pattern ( pattern_id );

ALTER TABLE patternstop
    ADD CONSTRAINT patternstop_stop_fk FOREIGN KEY ( stop_stop_id )
        REFERENCES stop ( stop_id );

ALTER TABLE trip
    ADD CONSTRAINT trip_calendar_fk FOREIGN KEY ( calendar_calendar_id )
        REFERENCES calendar ( calendar_id );

ALTER TABLE trip
    ADD CONSTRAINT trip_pattern_fk FOREIGN KEY ( pattern_pattern_id )
        REFERENCES pattern ( pattern_id );

CREATE SEQUENCE agency_agency_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER agency_agency_id_trg BEFORE
    INSERT ON agency
    FOR EACH ROW
    WHEN ( new.agency_id IS NULL )
BEGIN
    :new.agency_id := agency_agency_id_seq.nextval;
END;
/

CREATE SEQUENCE calendar_calendar_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER calendar_calendar_id_trg BEFORE
    INSERT ON calendar
    FOR EACH ROW
    WHEN ( new.calendar_id IS NULL )
BEGIN
    :new.calendar_id := calendar_calendar_id_seq.nextval;
END;
/

CREATE SEQUENCE line_line_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER line_line_id_trg BEFORE
    INSERT ON line
    FOR EACH ROW
    WHEN ( new.line_id IS NULL )
BEGIN
    :new.line_id := line_line_id_seq.nextval;
END;
/

CREATE SEQUENCE pattern_pattern_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pattern_pattern_id_trg BEFORE
    INSERT ON pattern
    FOR EACH ROW
    WHEN ( new.pattern_id IS NULL )
BEGIN
    :new.pattern_id := pattern_pattern_id_seq.nextval;
END;
/

CREATE SEQUENCE stop_stop_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER stop_stop_id_trg BEFORE
    INSERT ON stop
    FOR EACH ROW
    WHEN ( new.stop_id IS NULL )
BEGIN
    :new.stop_id := stop_stop_id_seq.nextval;
END;
/

CREATE SEQUENCE trip_trip_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER trip_trip_id_trg BEFORE
    INSERT ON trip
    FOR EACH ROW
    WHEN ( new.trip_id IS NULL )
BEGIN
    :new.trip_id := trip_trip_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                             0
-- ALTER TABLE                             13
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
